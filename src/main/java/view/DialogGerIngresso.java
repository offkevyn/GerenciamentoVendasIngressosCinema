/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Conexao;
import controller.fichario.CaixaFichario;
import controller.fichario.ClienteFichario;
import controller.fichario.FuncionarioFichario;
import controller.fichario.IngressoFichario;
import controller.fichario.SecaoFichario;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import model.Caixa;
import model.Cliente;
import model.Filme;
import model.Funcionario;
import model.Ingresso;
import model.Secao;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.swing.JRViewer;

/**
 *
 * @author Win10 x64
 */
public class DialogGerIngresso extends javax.swing.JDialog {

    private ArrayList<Ingresso> listIngresso;

    private ArrayList<Caixa> listCaixaa;
    private ArrayList<Secao> listSecao;
    private ArrayList<Cliente> listCliente;

    private IngressoFichario fixIngresso;

    private CaixaFichario fixCaixaa;
    private SecaoFichario fixSecao;
    private ClienteFichario fixCliente;

    /**
     * Creates new form DialogGerIngresso
     */
    public DialogGerIngresso(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        cbxEscolher.setVisible(false);
        jiformativo.setVisible(false);

        pnIncluir.setVisible(false);

        try {
            fixIngresso = new IngressoFichario();

            fixCaixaa = new CaixaFichario();
            fixSecao = new SecaoFichario();
            fixCliente = new ClienteFichario();
        } catch (SQLException sqlex) //Retorna um erro caso exista erro de query SQL
        {
            JOptionPane.showMessageDialog(null, "Erro de conexão, ERRO: " + sqlex.getMessage(), "ERROR INGRESSO", JOptionPane.ERROR_MESSAGE);
            sqlex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GroupBtnPrecoIngresso = new javax.swing.ButtonGroup();
        GroupBtnCrudIngresso = new javax.swing.ButtonGroup();
        lbTitulo = new javax.swing.JLabel();
        jiformativo1 = new javax.swing.JLabel();
        rbIncluir = new javax.swing.JRadioButton();
        rbExcluir = new javax.swing.JRadioButton();
        rbAlterar = new javax.swing.JRadioButton();
        rbConsultar = new javax.swing.JRadioButton();
        btnConcluido = new javax.swing.JButton();
        jiformativo = new javax.swing.JLabel();
        cbxEscolher = new javax.swing.JComboBox<>();
        pnIncluir = new javax.swing.JPanel();
        btnIncluir = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        cbxCaixaa = new javax.swing.JComboBox<>();
        lbCaixaa = new javax.swing.JLabel();
        lbSecao = new javax.swing.JLabel();
        cbxSecao = new javax.swing.JComboBox<>();
        cbxCliente = new javax.swing.JComboBox<>();
        lbCliente = new javax.swing.JLabel();
        lbPrecoIngresso = new javax.swing.JLabel();
        rbIngressoInteira = new javax.swing.JRadioButton();
        rbIngressoMeia = new javax.swing.JRadioButton();
        lbAcrescimo = new javax.swing.JLabel();
        tfAcrescimo = new javax.swing.JTextField();
        lbPrecoTotal = new javax.swing.JLabel();
        tfPrecoTotal = new javax.swing.JTextField();
        tfPoltronaEscolhida = new javax.swing.JTextField();
        btnEscolherPoltrona = new javax.swing.JButton();
        btnArquivo = new javax.swing.JButton();
        btnRelatorio = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ingresso");

        lbTitulo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTitulo.setText("Gerenciamento do Ingresso");

        jiformativo1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jiformativo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jiformativo1.setText("MENU");

        GroupBtnCrudIngresso.add(rbIncluir);
        rbIncluir.setText("INCLUIR");
        rbIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbIncluirActionPerformed(evt);
            }
        });

        GroupBtnCrudIngresso.add(rbExcluir);
        rbExcluir.setText("EXCLUIR");
        rbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbExcluirActionPerformed(evt);
            }
        });

        GroupBtnCrudIngresso.add(rbAlterar);
        rbAlterar.setText("ALTERAR");
        rbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbAlterarActionPerformed(evt);
            }
        });

        GroupBtnCrudIngresso.add(rbConsultar);
        rbConsultar.setText("CONSULTAR");
        rbConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbConsultarActionPerformed(evt);
            }
        });

        btnConcluido.setText("Concluído");
        btnConcluido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConcluidoActionPerformed(evt);
            }
        });

        jiformativo.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jiformativo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jiformativo.setText("Escolha o código do ingresso:");

        cbxEscolher.setName(""); // NOI18N
        cbxEscolher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxEscolherActionPerformed(evt);
            }
        });

        pnIncluir.setBackground(new java.awt.Color(250, 250, 250));

        btnIncluir.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        btnIncluir.setText("INCLUIR");
        btnIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        cbxCaixaa.setName(""); // NOI18N
        cbxCaixaa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxCaixaaActionPerformed(evt);
            }
        });

        lbCaixaa.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbCaixaa.setText("Caixa:");

        lbSecao.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbSecao.setText("Seção:");

        cbxSecao.setName(""); // NOI18N
        cbxSecao.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxSecaoItemStateChanged(evt);
            }
        });
        cbxSecao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxSecaoActionPerformed(evt);
            }
        });

        cbxCliente.setName(""); // NOI18N
        cbxCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxClienteActionPerformed(evt);
            }
        });

        lbCliente.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbCliente.setText("Cliente:");

        lbPrecoIngresso.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbPrecoIngresso.setText("Preço ingresso:");

        GroupBtnPrecoIngresso.add(rbIngressoInteira);
        rbIngressoInteira.setSelected(true);
        rbIngressoInteira.setText("Ineira (R$ 28,00)");
        rbIngressoInteira.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbIngressoInteiraActionPerformed(evt);
            }
        });

        GroupBtnPrecoIngresso.add(rbIngressoMeia);
        rbIngressoMeia.setText("Meia (R$ 14,00)");
        rbIngressoMeia.setToolTipText("");
        rbIngressoMeia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbIngressoMeiaActionPerformed(evt);
            }
        });

        lbAcrescimo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbAcrescimo.setText("Acréscimo: R$");

        tfAcrescimo.setEditable(false);
        tfAcrescimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfAcrescimoActionPerformed(evt);
            }
        });
        tfAcrescimo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfAcrescimoKeyTyped(evt);
            }
        });

        lbPrecoTotal.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbPrecoTotal.setText("Preço total: R$");

        tfPrecoTotal.setEditable(false);
        tfPrecoTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPrecoTotalActionPerformed(evt);
            }
        });
        tfPrecoTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfPrecoTotalKeyTyped(evt);
            }
        });

        tfPoltronaEscolhida.setEditable(false);
        tfPoltronaEscolhida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPoltronaEscolhidaActionPerformed(evt);
            }
        });
        tfPoltronaEscolhida.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfPoltronaEscolhidaKeyTyped(evt);
            }
        });

        btnEscolherPoltrona.setText("Poltrona");
        btnEscolherPoltrona.setToolTipText("");
        btnEscolherPoltrona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEscolherPoltronaActionPerformed(evt);
            }
        });

        btnArquivo.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        btnArquivo.setText("Arquivo");
        btnArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArquivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnIncluirLayout = new javax.swing.GroupLayout(pnIncluir);
        pnIncluir.setLayout(pnIncluirLayout);
        pnIncluirLayout.setHorizontalGroup(
            pnIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnIncluirLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnIncluirLayout.createSequentialGroup()
                        .addGroup(pnIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnIncluirLayout.createSequentialGroup()
                                .addGroup(pnIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnIncluirLayout.createSequentialGroup()
                                        .addGroup(pnIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(pnIncluirLayout.createSequentialGroup()
                                                .addComponent(btnEscolherPoltrona)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(tfPoltronaEscolhida, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(tfAcrescimo, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lbCliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lbAcrescimo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, Short.MAX_VALUE))
                                    .addGroup(pnIncluirLayout.createSequentialGroup()
                                        .addGroup(pnIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(cbxCliente, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cbxSecao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)))
                                .addGroup(pnIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(rbIngressoInteira)
                                    .addComponent(lbPrecoIngresso, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                                    .addComponent(rbIngressoMeia)
                                    .addComponent(lbPrecoTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tfPrecoTotal)
                                    .addComponent(cbxCaixaa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(pnIncluirLayout.createSequentialGroup()
                                .addComponent(btnArquivo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnIncluir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnIncluirLayout.createSequentialGroup()
                        .addComponent(lbSecao, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbCaixaa, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        pnIncluirLayout.setVerticalGroup(
            pnIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnIncluirLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnIncluirLayout.createSequentialGroup()
                        .addGroup(pnIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbCaixaa)
                            .addComponent(lbSecao))
                        .addGap(30, 30, 30))
                    .addGroup(pnIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbxSecao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbxCaixaa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(pnIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbCliente)
                    .addComponent(lbPrecoIngresso))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnIncluirLayout.createSequentialGroup()
                        .addComponent(rbIngressoInteira)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbIngressoMeia)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnIncluirLayout.createSequentialGroup()
                        .addComponent(lbAcrescimo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfAcrescimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfPrecoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lbPrecoTotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPoltronaEscolhida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEscolherPoltrona))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        btnRelatorio.setText("Relatório");
        btnRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRelatorioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnConcluido)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rbIncluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jiformativo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rbExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rbAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rbConsultar))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jiformativo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbxEscolher, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(btnRelatorio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jiformativo1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rbIncluir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbExcluir))
                            .addComponent(jiformativo, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(cbxEscolher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(3, 3, 3)
                        .addComponent(rbAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbConsultar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnConcluido)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRelatorio)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(pnIncluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbIncluirActionPerformed
        popularJComboBoxSecao();
        popularJComboBoxCliente();
        popularJComboBoxCaixaa();

        cbxEscolher.setVisible(false);
        jiformativo.setVisible(false);

        pnIncluir.setVisible(true);
        
        configIngresso();
        btnIncluir.setText("INCLUIR");
    }//GEN-LAST:event_rbIncluirActionPerformed

    private void rbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbExcluirActionPerformed
        if (qtdIngresso() > 0) {
            restart();
            configIngresso();
            cbxEscolher.setVisible(true);
            jiformativo.setVisible(true);
            popularJComboBox();
        } else
            JOptionPane.showMessageDialog(this, "A lista está VAZIA!!!", "VAZIA", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_rbExcluirActionPerformed

    private void rbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbAlterarActionPerformed
        if (qtdIngresso() > 0) {
            popularJComboBoxSecao();
            popularJComboBoxCliente();
            popularJComboBoxCaixaa();

            restart();
            configIngresso();
            cbxEscolher.setVisible(true);
            jiformativo.setVisible(true);
            popularJComboBox();
        } else
            JOptionPane.showMessageDialog(this, "A lista está VAZIA!!!", "VAZIA", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_rbAlterarActionPerformed

    private void rbConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbConsultarActionPerformed
        if (qtdIngresso() > 0) {
            popularJComboBoxSecao();
            popularJComboBoxCliente();
            popularJComboBoxCaixaa();
            popularJComboBox();

            cbxEscolher.setVisible(true);
            jiformativo.setVisible(true);

            btnIncluir.setVisible(false);
            btnCancelar.setVisible(false);
        } else
            JOptionPane.showMessageDialog(this, "A lista está VAZIA!!!", "VAZIA", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_rbConsultarActionPerformed

    private void btnConcluidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConcluidoActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnConcluidoActionPerformed

    private void cbxEscolherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxEscolherActionPerformed
        if (cbxEscolher.getSelectedIndex() >= 0) {
            pnIncluir.setVisible(true);

            Ingresso ticket = listIngresso.get(cbxEscolher.getSelectedIndex());

            cbxSecao.setSelectedIndex(posicaoSecaoNoArray(ticket.getSecao()));
            cbxCaixaa.setSelectedIndex(posicaoCaixaaNoArray(ticket.getCaixa()));
            if(ticket.getCliente() != null)
                cbxCliente.setSelectedIndex(posicaoClienteNoArray(ticket.getCliente()));
            else
                cbxCliente.setSelectedIndex(-1);

            if (ticket.getPreco() == 28.0) {
                rbIngressoInteira.setSelected(true);
            } else {
                rbIngressoMeia.setSelected(true);
            }
            tfAcrescimo.setText(ticket.getAcrescimo() + "");
            tfPrecoTotal.setText(ticket.getPreco() + ticket.getAcrescimo() + "");
            tfPoltronaEscolhida.setText(ticket.getPoltrona() + "");

            if (rbAlterar.isSelected()) {

                btnIncluir.setText("ALTERAR");
                btnArquivo.setVisible(false);

//                tfAcrescimo.setEditable(true);
//                tfPrecoTotal.setEditable(true);
//                tfPoltronaEscolhida.setEditable(true);
                rbIngressoInteira.setEnabled(true);
                rbIngressoMeia.setEnabled(true);
                cbxCaixaa.setEnabled(true);
                cbxCliente.setEnabled(true);
                cbxSecao.setEnabled(true);
                //CheckBoxVipSim.setEditable(true);
            } else if (rbExcluir.isSelected()) {
                btnCancelar.setVisible(true);
                btnIncluir.setVisible(true);
                btnArquivo.setVisible(false);
                btnIncluir.setText("EXCLUIR");
                

//                tfAcrescimo.setEditable(false);
//                tfPrecoTotal.setEditable(false);
//                tfPoltronaEscolhida.setEditable(false);
                rbIngressoInteira.setEnabled(false);
                rbIngressoMeia.setEnabled(false);
                cbxCaixaa.setEnabled(false);
                cbxCliente.setEnabled(false);
                cbxSecao.setEnabled(false);
            } else if (rbConsultar.isSelected()) {
                btnCancelar.setVisible(false);
                btnIncluir.setVisible(false);
                btnArquivo.setVisible(true);

//                tfAcrescimo.setEditable(false);
//                tfPrecoTotal.setEditable(false);
//                tfPoltronaEscolhida.setEditable(false);
                rbIngressoInteira.setEnabled(false);
                rbIngressoMeia.setEnabled(false);
                cbxCaixaa.setEnabled(false);
                cbxCliente.setEnabled(false);
                cbxSecao.setEnabled(false);
            }
        }
    }//GEN-LAST:event_cbxEscolherActionPerformed

    private void btnIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirActionPerformed
        Ingresso ticket = new Ingresso();
        Secao secao = listSecao.get(cbxSecao.getSelectedIndex());
        Caixa caixaa = listCaixaa.get(cbxCaixaa.getSelectedIndex());
        Cliente cliente = null;
        if(cbxCliente.getSelectedIndex() >= 0)
            cliente = listCliente.get(cbxCliente.getSelectedIndex());


        if (tfPoltronaEscolhida.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Escolha uma poltrona!!", "ERROR CAMPO VAZIO", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int acrescimo = 0;
        float precoIngresso = 28;
        if (rbIngressoMeia.isSelected()) {
            precoIngresso = 14;
        }
        if (secao.getSala().isVip()) {
            acrescimo = (int) (precoIngresso * 0.2);
        }

        if (!btnIncluir.getText().equals("INCLUIR")) {
            ticket = listIngresso.get(cbxEscolher.getSelectedIndex());
        }

        if (!tfPoltronaEscolhida.getText().isEmpty()) {
            ticket.setPoltrona(Integer.parseInt(tfPoltronaEscolhida.getText()));
        }
        ticket.setAcrescimo(acrescimo);
        ticket.setPreco(precoIngresso);
        ticket.setCaixa(caixaa);
        ticket.setCliente(cliente);
        ticket.setSecao(secao);

        switch (btnIncluir.getText()) {
            case "INCLUIR": {

                try {
                    fixIngresso.incluir(ticket);
                } catch (SQLException sqlex) //Retorna um erro caso exista erro de query SQL
                {
                    JOptionPane.showMessageDialog(null, "Erro na query [INCLUIR], ERRO: " + sqlex.getMessage(), "ERROR INGRESSO", JOptionPane.ERROR_MESSAGE);
                    sqlex.printStackTrace();
                }

            }
            break;
            case "EXCLUIR": {
                int ConfirmDialog = JOptionPane.showConfirmDialog(this, "Deseja realamente EXCLUIR esse ingresso???", "EXCLUIR???", JOptionPane.INFORMATION_MESSAGE);
                if (ConfirmDialog == JOptionPane.YES_OPTION) {

                    try {
                        fixIngresso.remove(ticket);
                    } catch (SQLException sqlex)//Retorna um erro caso exista erro de query SQL
                    {
                        if (sqlex.getSQLState().equalsIgnoreCase("23503")) {
                            JOptionPane.showMessageDialog(null, "Não pode ser excluido, pois tem dependente(s): " + sqlex.getMessage(), "ERROR INGRESSO", JOptionPane.ERROR_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(null, "Erro na query [REMOVER], ERRO: " + sqlex.getMessage(), "ERROR INGRESSO", JOptionPane.ERROR_MESSAGE);
                        }
                        sqlex.printStackTrace();
                    }

                } else {
                    btnCancelarActionPerformed(evt);
                }
                break;
            }
            case "ALTERAR": {
                int ConfirmDialog = JOptionPane.showConfirmDialog(this, "Deseja realamente ALTERAR esse ingresso???", "ALTERAR???", JOptionPane.INFORMATION_MESSAGE);
                if (ConfirmDialog == JOptionPane.YES_OPTION) {

                    try {
                        fixIngresso.alteracao(ticket);
                    } catch (SQLException sqlex) //Retorna um erro caso exista erro de query SQL
                    {
                        JOptionPane.showMessageDialog(null, "Erro na query [ALTERAÇÃO], ERRO: " + sqlex.getMessage(), "ERROR INGRESSO", JOptionPane.ERROR_MESSAGE);
                        sqlex.printStackTrace();
                    }

                } else {
                    btnCancelarActionPerformed(evt);
                }
                break;
            }
        }
        restart();
    }//GEN-LAST:event_btnIncluirActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        restart();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void cbxCaixaaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxCaixaaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxCaixaaActionPerformed

    private void cbxSecaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxSecaoActionPerformed
        atualizaAcrescimoEPrecoTotal();
    }//GEN-LAST:event_cbxSecaoActionPerformed

    private void cbxClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxClienteActionPerformed

    private void rbIngressoInteiraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbIngressoInteiraActionPerformed
        atualizaAcrescimoEPrecoTotal();
    }//GEN-LAST:event_rbIngressoInteiraActionPerformed

    private void rbIngressoMeiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbIngressoMeiaActionPerformed
        atualizaAcrescimoEPrecoTotal();
    }//GEN-LAST:event_rbIngressoMeiaActionPerformed

    private void tfAcrescimoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfAcrescimoKeyTyped

    }//GEN-LAST:event_tfAcrescimoKeyTyped

    private void tfPrecoTotalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPrecoTotalKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPrecoTotalKeyTyped

    private void tfPrecoTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPrecoTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPrecoTotalActionPerformed

    private void tfPoltronaEscolhidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPoltronaEscolhidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPoltronaEscolhidaActionPerformed

    private void tfPoltronaEscolhidaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPoltronaEscolhidaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPoltronaEscolhidaKeyTyped

    private void tfAcrescimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfAcrescimoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfAcrescimoActionPerformed

    private void btnEscolherPoltronaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEscolherPoltronaActionPerformed
        DialogPoltronas dialgPoltronas;
        if (rbIncluir.isSelected() || rbAlterar.isSelected()) {
            if (tfPoltronaEscolhida.getText().isEmpty()) {
                dialgPoltronas = new DialogPoltronas(null, true, false, listSecao.get(cbxSecao.getSelectedIndex()), null);
            } else {
                Secao sessionAux = listSecao.get(cbxSecao.getSelectedIndex());
                Integer numPoltrona = listIngresso.get(cbxEscolher.getSelectedIndex()).getPoltrona();
                sessionAux.getPoltronasOucupadas().remove(numPoltrona);
                dialgPoltronas = new DialogPoltronas(null, true, false, sessionAux, Integer.parseInt(tfPoltronaEscolhida.getText()));
            }
        } else {
            dialgPoltronas = new DialogPoltronas(null, true, true, listSecao.get(cbxSecao.getSelectedIndex()), listIngresso.get(cbxEscolher.getSelectedIndex()).getPoltrona());
        }

        dialgPoltronas.setVisible(true);

        int escolhida = dialgPoltronas.getEscolhida();
        if (!dialgPoltronas.isVisible() && escolhida > 0 && (rbIncluir.isSelected() || rbAlterar.isSelected()))
            tfPoltronaEscolhida.setText("" + escolhida);
    }//GEN-LAST:event_btnEscolherPoltronaActionPerformed

    private void cbxSecaoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxSecaoItemStateChanged
        tfPoltronaEscolhida.setText("");
    }//GEN-LAST:event_cbxSecaoItemStateChanged

    private void btnArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArquivoActionPerformed
        try {
            Connection conn = Conexao.getConexao();
            
            Ingresso ticket = listIngresso.get(cbxEscolher.getSelectedIndex());
            
            Map parameters = new HashMap();
            parameters.put("REPORT_CONNECTION", conn);
            parameters.put("ID_INGRESSO", ticket.getCodigo());

            JasperReport relCompilado = JasperCompileManager.compileReport("src/main/java/rel/IngressoPeloID.jrxml");

            JasperPrint relPreenchido = JasperFillManager.fillReport(relCompilado, parameters, conn);

            JDialog tela = new JDialog(this, "Relatório Ingresso", true);
            tela.setSize(1100, 700);

            JRViewer painelRel = new JRViewer(relPreenchido);

            tela.getContentPane().add(painelRel);

            tela.setVisible(true);

        } catch (JRException ex) {
            JOptionPane.showMessageDialog(null, "Erro gerar relatório [ JasperReport ] " + ex.getMessage(), "ERROR INGRESSO", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        catch (SQLException sqlex) //Retorna um erro caso exista erro de query SQL
        {
            JOptionPane.showMessageDialog(null, "Erro na query [RELATÓRIO], ERRO: " + sqlex.getMessage(), "ERROR INGRESSO", JOptionPane.ERROR_MESSAGE);
            sqlex.printStackTrace();
        }
    }//GEN-LAST:event_btnArquivoActionPerformed

    private void btnRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRelatorioActionPerformed
        try {
            Connection conn = Conexao.getConexao();

            Map parameters = new HashMap();
            parameters.put("REPORT_CONNECTION", conn);

            JasperReport relCompilado = JasperCompileManager.compileReport("src/main/java/rel/Ingresso.jrxml");

            JasperPrint relPreenchido = JasperFillManager.fillReport(relCompilado, parameters, conn);

            JDialog tela = new JDialog(this, "Relatório Ingresso", true);
            tela.setSize(1000, 700);

            JRViewer painelRel = new JRViewer(relPreenchido);

            tela.getContentPane().add(painelRel);

            tela.setVisible(true);

        } catch (JRException ex) {
            JOptionPane.showMessageDialog(null, "Erro gerar relatório [ JasperReport ] " + ex.getMessage(), "ERROR INGRESSO", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        catch (SQLException sqlex) //Retorna um erro caso exista erro de query SQL
        {
            JOptionPane.showMessageDialog(null, "Erro na query [RELATÓRIO], ERRO: " + sqlex.getMessage(), "ERROR INGRESSO", JOptionPane.ERROR_MESSAGE);
            sqlex.printStackTrace();
        }
    }//GEN-LAST:event_btnRelatorioActionPerformed

    private void atualizaAcrescimoEPrecoTotal() {
        int acrescimo = 0;

        float precoIngresso = 28;
        if (rbIngressoMeia.isSelected()) {
            precoIngresso = 14;
        }

        if (cbxSecao.getSelectedIndex() >= 0) {
            Secao secao = listSecao.get(cbxSecao.getSelectedIndex());

            if (secao.getSala().isVip()) {
                acrescimo = (int) (precoIngresso * 0.2);
            }
        }
        tfAcrescimo.setText(acrescimo + "");
        tfPrecoTotal.setText(acrescimo + precoIngresso + "");
    }

    private void configIngresso() {
        rbAlterar.setEnabled(false);
        rbConsultar.setEnabled(false);
        rbExcluir.setEnabled(false);
        rbIncluir.setEnabled(false);
        
        btnArquivo.setVisible(false);

        pnIncluir.setVisible(true);
        btnIncluir.setVisible(true);
        btnCancelar.setVisible(true);

//        tfAcrescimo.setEditable(true);
//        tfPrecoTotal.setEditable(true);
//        tfPoltronaEscolhida.setEditable(true);
        rbIngressoInteira.setEnabled(true);
        rbIngressoMeia.setEnabled(true);
        cbxCaixaa.setEnabled(true);
        cbxCliente.setEnabled(true);
        cbxSecao.setEnabled(true);

        tfAcrescimo.setText("");
        tfPrecoTotal.setText("");
        tfPoltronaEscolhida.setText("");

        popularJComboBoxSecao();
        popularJComboBoxCliente();
        popularJComboBoxCaixaa();
        
        cbxCliente.setSelectedIndex(-1);
    }

    private void restart() {
        rbAlterar.setEnabled(true);
        rbConsultar.setEnabled(true);
        rbExcluir.setEnabled(true);
        rbIncluir.setEnabled(true);

        pnIncluir.setVisible(false);
        cbxEscolher.setVisible(false);
        jiformativo.setVisible(false);

        tfAcrescimo.setText("");
        tfPrecoTotal.setText("");
        tfPoltronaEscolhida.setText("");
        cbxCaixaa.setSelectedIndex(-1);
        cbxCliente.setSelectedIndex(-1);
        cbxSecao.setSelectedIndex(-1);
    }

    private int qtdIngresso() {
        int cont = 0;
        try {
            cont = fixIngresso.qtdEntidade();
        } catch (SQLException sqlex) //Retorna um erro caso exista erro de query SQL
        {
            JOptionPane.showMessageDialog(null, "Erro na query [QTD INGRESSO], ERRO: " + sqlex.getMessage(), "ERROR INGRESSO", JOptionPane.ERROR_MESSAGE);
            sqlex.printStackTrace();
        }
        return cont;
    }

    private int posicaoSecaoNoArray(Secao secao) {
        try {
            listSecao = fixSecao.relatorio();
        } catch (SQLException sqlex) //Retorna um erro caso exista erro de query SQL
        {
            JOptionPane.showMessageDialog(null, "Erro na query [RELATÓRIO - Seção], ERRO: " + sqlex.getMessage(), "ERROR INGRESSO", JOptionPane.ERROR_MESSAGE);
            sqlex.printStackTrace();
        }

        for (Secao session : listSecao) {
            if (session.getCodigo() == secao.getCodigo()) {
                return listSecao.indexOf(session);
            }
        }

        return -1;
    }

    private int posicaoClienteNoArray(Cliente cliente) {
        try {
            listCliente = fixCliente.relatorio();
        } catch (SQLException sqlex) //Retorna um erro caso exista erro de query SQL
        {
            JOptionPane.showMessageDialog(null, "Erro na query [RELATÓRIO - Cliente], ERRO: " + sqlex.getMessage(), "ERROR INGRESSO", JOptionPane.ERROR_MESSAGE);
            sqlex.printStackTrace();
        }

        for (Cliente client : listCliente) {
            if (client.getCodigo() == cliente.getCodigo()) {
                return listCliente.indexOf(client);
            }
        }

        return -1;
    }

    private int posicaoCaixaaNoArray(Caixa caixaa) {

        try {
            listCaixaa = fixCaixaa.relatorio();
        } catch (SQLException sqlex) //Retorna um erro caso exista erro de query SQL
        {
            JOptionPane.showMessageDialog(null, "Erro na query [RELATÓRIO - Caixaa], ERRO: " + sqlex.getMessage(), "ERROR INGRESSO", JOptionPane.ERROR_MESSAGE);
            sqlex.printStackTrace();
        }

        for (Caixa cashier : listCaixaa) {
            if (cashier.getCodigo() == caixaa.getCodigo()) {
                return listCaixaa.indexOf(cashier);
            }
        }

        return -1;
    }

    private void popularJComboBoxSecao() {
        cbxSecao.setModel(new DefaultComboBoxModel());

        try {
            listSecao = fixSecao.relatorio();
        } catch (SQLException sqlex) //Retorna um erro caso exista erro de query SQL
        {
            JOptionPane.showMessageDialog(null, "Erro na query [RELATÓRIO Seção], ERRO: " + sqlex.getMessage(), "ERROR INGRESSO", JOptionPane.ERROR_MESSAGE);
            sqlex.printStackTrace();
        }

        for (Secao session : listSecao) {
            if (session != null) {
                cbxSecao.addItem(Integer.toString(session.getCodigo()));
            }
        }

    }

    private void popularJComboBoxCliente() {
        cbxCliente.setModel(new DefaultComboBoxModel());

        try {
            listCliente = fixCliente.relatorio();
        } catch (SQLException sqlex) //Retorna um erro caso exista erro de query SQL
        {
            JOptionPane.showMessageDialog(null, "Erro na query [RELATÓRIO - Cliente], ERRO: " + sqlex.getMessage(), "ERROR INGRESSO", JOptionPane.ERROR_MESSAGE);
            sqlex.printStackTrace();
        }
        
        for (Cliente client : listCliente) {
            if (client != null) {
                cbxCliente.addItem(client.getNome());
            }
        }
    }

    private void popularJComboBoxCaixaa() {
        cbxCaixaa.setModel(new DefaultComboBoxModel());

        try {
            listCaixaa = fixCaixaa.relatorio();
        } catch (SQLException sqlex) //Retorna um erro caso exista erro de query SQL
        {
            JOptionPane.showMessageDialog(null, "Erro na query [RELATÓRIO - Caixa], ERRO: " + sqlex.getMessage(), "ERROR INGRESSO", JOptionPane.ERROR_MESSAGE);
            sqlex.printStackTrace();
        }

        for (Caixa cashier : listCaixaa) {
            if (cashier != null) {
                cbxCaixaa.addItem(Integer.toString(cashier.getNumero()));
            }
        }
    }

    private void popularJComboBox() {
        cbxEscolher.setModel(new DefaultComboBoxModel());

        try {
            listIngresso = fixIngresso.relatorio();
        } catch (SQLException sqlex) //Retorna um erro caso exista erro de query SQL
        {
            JOptionPane.showMessageDialog(null, "Erro na query [RELATÓRIO], ERRO: " + sqlex.getMessage(), "ERROR INGRESSO", JOptionPane.ERROR_MESSAGE);
            sqlex.printStackTrace();
        }

        for (Ingresso ticket : listIngresso) {
            if (ticket != null) {
                cbxEscolher.addItem(Integer.toString(ticket.getCodigo()));
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup GroupBtnCrudIngresso;
    private javax.swing.ButtonGroup GroupBtnPrecoIngresso;
    private javax.swing.JButton btnArquivo;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConcluido;
    private javax.swing.JButton btnEscolherPoltrona;
    private javax.swing.JButton btnIncluir;
    private javax.swing.JButton btnRelatorio;
    private javax.swing.JComboBox<String> cbxCaixaa;
    private javax.swing.JComboBox<String> cbxCliente;
    private javax.swing.JComboBox<String> cbxEscolher;
    private javax.swing.JComboBox<String> cbxSecao;
    private javax.swing.JLabel jiformativo;
    private javax.swing.JLabel jiformativo1;
    private javax.swing.JLabel lbAcrescimo;
    private javax.swing.JLabel lbCaixaa;
    private javax.swing.JLabel lbCliente;
    private javax.swing.JLabel lbPrecoIngresso;
    private javax.swing.JLabel lbPrecoTotal;
    private javax.swing.JLabel lbSecao;
    private javax.swing.JLabel lbTitulo;
    private javax.swing.JPanel pnIncluir;
    private javax.swing.JRadioButton rbAlterar;
    private javax.swing.JRadioButton rbConsultar;
    private javax.swing.JRadioButton rbExcluir;
    private javax.swing.JRadioButton rbIncluir;
    private javax.swing.JRadioButton rbIngressoInteira;
    private javax.swing.JRadioButton rbIngressoMeia;
    private javax.swing.JTextField tfAcrescimo;
    private javax.swing.JTextField tfPoltronaEscolhida;
    private javax.swing.JTextField tfPrecoTotal;
    // End of variables declaration//GEN-END:variables
}
